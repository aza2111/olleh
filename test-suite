TODO - TESTING

ERRORS
test-player-pos (does not compile completely)


Positive (to write)
standard library (test-stdlib-pos)
 getWordScore
 setLetterScore
 checkWord
 setLetters
 getLength (of a string)
 reverse
 scramble



Written (positive)
Assign player and print its members (test-player-pos)
fresh player(nothing), fresh player(something) (test-player-pos)
vmembers (test-player-pos)


Written (negative)
fresh player (same field twice) (fail-freshpla2-neg)




Passing (positive)
// comment (test-assign-pos)
/* comment*/ (test-if-pos)
add integers (test-add-pos)
concat string + int (test-print-pos)
if else (test-if-pos)
declare function (void) (test-func-pos)
call function(void) (test-func-pos)
subtract integers (test-int-pos)
modulo integers (test-int-pos)
multiply integers (test-int-pos)
divide integers (test-int-pos)
complex expression with lots of ops (test-int-pos)
exit (test-exit-pos)
multiline string? (test-str-pos)
concat strings, concat string + multiple ints (test-str-pos)
and/or/not (test-if-pos)
if noelse (test-if-pos)
Assign and print a variable of type map (char and str) (test-map-pos)
fresh map(string), fresh map(char) (test-map-pos)
empty map (test-map-pos)
/*comment*/ on same line as code (test-map-pos)
</>/==/<=/>=/!= (for int and char) (test-compare-pos)
multiline statement (test-compare-pos)
map getsetters (test-map-pos)
Assign and print a variable of type: int (pos, neg, zero), char, string, bool (test-assign-pos)
create function (no args, args, void, real return type) (test-func-pos)
call function (no args, args, void, real return type) (test-func-pos)
use the result of a function in statement (test-func-pos)
test while loops (test-while-pos)
foreach of list(char, list), charmap (test-foreach-pos)
Assign and print a variable of type list (1d and 2d) (test-list-pos)
fresh list(x), fresh list(x,y) (test-list-pos)
two statements on the same line (test-list-pos)
empty 2d list (test-list-pos)
empty 1d list (test-list-pos)
list getsetters (test-list-pos)
foreach of stringmap (test-foreach-pos)
use function to manipluate a global variable (test-func-pos)
inttostring (test-builtin-pos)
test strings with \n, \0 (test-str-pos)
test for/foreach/while with multiple statements in body (test-loop-pos)
builtins: destroy, listToString, stringtolist, readdict, contains, anagram (test-builtin-pos)
zero-length fresh lists (test-list-pos)
empty body of for/while/if/foreach (test-emptybody-pos)
map with same key twice (gets resolved to the last value) (test-builtin-pos)
null comparison (bw listlist, stringmap, charlist, charmap, string) (test-null-pos)


Passing (negative)
plus (str, bool) (fail-print-neg)
minus (strs) (fail-subtract-neg)
Print Player (fail-printplayer-neg)
list of stuff that is not a char or list (fail-intlist-neg, fail-intlist2-neg)
list of mixed chars and lists (fail-list-neg)
map with non-integer values (fail-mapval-neg)
map with key that is not a char or str (fail-mapkey-neg)
map with mixed char/str keys (fail-mixmap-neg)
and/or/not for non-bool exprs (fail-and-neg, fail-or-neg, fail-not-neg)
</>/==/<=/>= for mixed int/char (fail-mixcmp-neg)
<= comparison for non-int/char (fail-cmp-neg)
mult/div/mod for non-int (fail-mult-neg, fail-div-neg, fail-mod-neg)
plus for not: 2 ints, 2 strs, str(s) + int(s) (fail-add1-neg, fail-add2-neg, fail-add3-neg)
misuse of variables
-prior to declaration (fail-prior-neg)
-improper types (fail-vartype-neg)
-improper types (charmap/strmap, charlist/listlist) (fail-maptype-neg, fail-listype-neg)
-out of scope (fail-scope-neg)
-redefinition of a global in formals (fail-glofo-neg)
-redefinition of a global in locals (fail-glolo-neg)
-redefinition of formal in locals (fail-folo-neg)
-void type variable (fail-voidvar-neg)
function returning the wrong type (fail-ret-neg)
calling a function with wrong params (fail-paramnum-neg, fail-paramtype-neg)
calling a function that has not been declared (fail-undef-neg)
fresh list(non-integer) (fail-freshlis1-neg)
fresh list(>2 integers) (fail-freshlis2-neg)
fresh list() (fail-freshlis3-neg)
fresh player (additional field) (fail-freshpla1-neg)
do something with the result of a void function (fail-voidas-neg)
negative (noninteger) (fail-nega-neg)
print void (fail-voidas-neg)
foreach on sth that's not a list or map (fail-foreach-neg)
multiple chars within single quotes (fail-chars-neg)
trailing open comment (fail-comment-neg)
trailing open double quote (fail-quote-neg)
variable that starts with a number (fail-var1-neg)
variable that starts with an underscore (fail-var2-neg)
variable that starts with an uppercase leter (fail-var3-neg)
variable with disallowed character (fail-var4-neg)
use reserved keywords as variables (fail-var5-neg)
Map x;/List x; (fail-gmap-neg, fail-glist-neg)
incorrect fresh player syntax (fail-fpla-neg)
incorrect map syntax (fail-smap-neg)
incorrect list syntax (fail-slist-neg)
prefix notation (+ 9 8) (fail-prefix-neg)
no ending semicolon (fail-semi-neg)
expr not expr (fail-not2-neg)
binop as unop (x = %3 eg) (fail-unop-neg)
emtpy if() (fail-eif-neg)
empty for() (fail-efor-neg)
3d list (fail-listlistlist-neg)
redeclaring variable within the same function's conditionals(fail-condscope-neg)
function in a function (fail-funcfunc-neg)
if w/o parens (fail-noparens-neg)
double quote in string (fail-doublequote-neg)
return that's not the last statement of a function (fail-returns-neg)
map that is {} (fail-ambigmap-neg)
== for non-int/char/bool (string/string) (fail-eq-neg)
null comparison for disallowed type (int) (fail-null-neg)






.
