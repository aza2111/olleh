/*
 * This is the !OLLEH Standard Library
 * Contributors: Caroline Roig-Irwin clr2176
 */

map<char> letterScores = { 'a' -> 1, 'b' -> 1, 'c' -> 1, 'd' -> 1, 'e' -> 1,
        'f' -> 1, 'g' -> 1, 'h' -> 1, 'i' -> 1, 'j' -> 1, 'k' -> 1, 'l' -> 1,
        'm' -> 1, 'n' -> 1, 'o' -> 1, 'p' -> 1, 'q' -> 1, 'r' -> 1, 's' -> 1,
        't' -> 1, 'u' -> 1, 'v' -> 1, 'w' -> 1, 'x' -> 1, 'y' -> 1, 'z' -> 1,
        'A' -> 1, 'B' -> 1, 'C' -> 1, 'D' -> 1, 'E' -> 1, 'F' -> 1, 'G' -> 1,
        'H' -> 1, 'I' -> 1, 'J' -> 1, 'K' -> 1, 'L' -> 1, 'M' -> 1, 'N' -> 1,
        'O' -> 1, 'P' -> 1, 'Q' -> 1, 'R' -> 1, 'S' -> 1, 'T' -> 1, 'U' -> 1,
        'V' -> 1, 'W' -> 1, 'X' -> 1, 'Y' -> 1, 'Z' -> 1 };

function int getWordScore(String w_):
        return dictionary.get(w_);
end;

function void setLetterScore(map<char> letters_):
        foreach lett_ letters_:
                letterScores.set(lett_, letters_.get(lett_));
        end;
end;

function boolean checkWord(String w_):
        return dictionary.contains(w_);
end;

function void setLetters(Player player_):
        int len_ = player_.letters.getLength();
        list<char> temp_ = fresh list(len_);
        int i_ = 0;
        int ch_;

        while (i_ < len_):
                ch_ = random(26) + 97; //random lowercase ASCII
                temp_.set(i_, ASCII ch_);
                i_ = i_ + 1;
        end;
        player_.letters = temp_;
end;

function int getLength(String w_):
        list<char> temp_ = stringToList(w_);
        return temp_.getLength();
end;

function String reverse(String w_):
        int i_ = 0;
        int len_ = getLength(w_);
        list<char> temp_ = fresh list(len_);
        list<char> temp2_ = stringToList(w_);

        while (i_ < len_):
                temp_.set(i_, temp2_.get(len_ - i_ - 1));
                i_ = i_ + 1;
        end;
        return listToString(temp_);
end;

function String scramble(String w_):
        int i_ = 0;
        int len_ = getLength(w_);
        int x_;
        list<char> temp_ = fresh list(len_);
        list<char> temp2_ = stringToList(w_);
        list<char> temp3_ = fresh list(len_);

        while (i_ < len_):
                x_ = random(len_);
                while (temp3_.get(x_) == '1'):
                        x_ = random(len_);
                end;

                temp_.set(x_, temp2_.get(i_));
                temp3_.set(x_, '1');
                i_ = i_ + 1;
        end;
        return listToString(temp_);
end;
