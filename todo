@TODO
Once item is done/tested, remove it from the list


Builtins
-getsetters possibly? add to semant, codegen, ostdlib if necessary

Parser
-fresh list(expr)
-fresh list(expr, expr)
-empty 2d list? nah just check and make sure it checks out

Semantic Checker
-enforce newtobj = map
-enforce newobj = list or player
-bool binops
-enforce no assignment in list/map Literals
-no list/map polymorphism
-1d or 2d list only (and how to distinguish)
-fresh list in new/newtobj

Legitimate Test Suite
-write down tests
-build testing for all functionality

LRM
-fresh list(expr)
-explain array sentinels/integer limits
-variable scope (clarify)
-limits on string literals (can they have newlines? test the functionality)
-move some functs to builtin status
-eliminate board

BUILTINS (ostdlib.c)
-rename file?
-implement constants if necessary
-anagram()
-readDict()
-map.destroy() -> "Mapdestroy"
-map.contains()
-map.getLength()
-map.get()
-list.get()
-Initialize_dictionary()
-list.getLength() for chars and lists
-subStrings()
-once everything has been tested, remove commented-out test code


Standard Library (.olh)
-Write standard library functions
-Hook them into code we write via the compiler (how?)

Compiler (codegen.ml)
-add builtin constants (dictionary)
-add structs and other builtin types
-printing lists
-global variables
-variable scope
-garbage collection for string return values
-SVmember (members of objects)
-SLiteralm (literal maps)
-SAssignm (member assigning)
-SAssign (variable assigning)
-SBinop for booleans (if needed?)
-SNewobj/SNewtobj (allocating space for new objects)
-SCallm (calling a function on an object)
-SFor
-SReturn
-SIf
-SForeach
-SBind (variable creation)
-build_ret for all return types



.
