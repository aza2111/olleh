@TODO
Once item is done/tested, remove it from the list

ALL FILES
-comment code, explain anything that's ambiguous or confusing to you (or that you think
  might need explaining to tfs/townsend)


Semantic Checker
-add any more builtins that are allowed to be called by the user (check vs lrm)
-check how callm() works and add any builtins as glue (getsetters?) if necessary to line ~57
-add back in the dictionary stuff
-add dict as param to correct functions during transformation ()
-go over and make sure it complies with the specs
-refactor if there's time


Legitimate Test Suite
-see test-suite


LRM
-curly quotes to straight; code to courier
-standardize format (line spacing, font size, all Null, etc)
-any updates made in syntax (check against parser/semant at very end)
-variable scope (clarify): one per function (even in cond/loop should be); what is default value (if any: fresh list allocate all null??)
-lists are NOT immutable. talk about their mutability (implemented as C arrays, attempt to modify out of bounds for allocated GetElemSpace
is impossible, though other mod methods such as setting elem at index to something else, are totally ok (which may result in a changed dimension))
-check semantics of fresh for diff types

-ASCII max = 127, not 256
-readdict as a void function (sets dict to null)
-limits on string literals (they can have newlines literals!),
 escaped quote char is poss?, what about "\n?" TEST THIS
-getsetters (explain the semantics in builtin function section)
-modifying maps while foreaching them (once that section's written)


BUILTINS (ostdlib.c)
-Listlistset, Charlistlet (handle out of bounds case)


Standard Library (.olh)
-Write standard library functions (list here)
-Hook them into code we write via the compiler (how?) https://piazza.com/class/jaiu2g6r8py36c?cid=321


Compiler (codegen.ml)
-add new builtins with return types, also match call() with them
-pointer_type i8_t -> what we're actually calling it
-readdict as a "void" function (remember to assign result, in destroy as well)
-add builtin constants (dictionary, letterScores) when appropriate
-SVmember (members of objects: change them from calls to getsetters using build_call)
-SLiteralm (literal maps)
-player functionality
-SAssignm (member assigning: change to call setter)
-SNewobj/SNewtobj (allocating space for new objects: set players to garbage vals for non-specified things, charmap/strmap to null,
 list of chars to all 1 (except last), listlist to all elems as fresh 1d list)
-SNewlis of listlist (and SLiterall for lists of lists)
-add_terminal for all return types
-add builtins for strlen and others
-null comparisons/null pointer
-foreach and maps: use an iterator, NOT a counter



.
