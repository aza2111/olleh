@TODO
Once item is done/tested, remove it from the list


Builtins
-getsetters possibly? add to semant, codegen, ostdlib if necessary
-exit in codegen (sexit->build call to exit)


Semantic Checker
-newobj (charmap, stringmap, charlist, listlist)
-scope of freach variables
-refactor if there's time
-add back in the dictionary stuff

Legitimate Test Suite
-build testing for all functionality
-build .out/.err files
-remove extraneous tests

LRM
-variable scope (clarify)
-when you are not allowed to assign variables
-limits on string literals (can they have newlines? test the functionality)
-getsetters

BUILTINS (ostdlib.c)
-rename file?
-implement constants (dictionary and letterScores)
-anagram()
-readDict()
-map.destroy() -> "Mapdestroy"
-map.contains()
-map.getLength()
-map.get()
-list.get()
-Initialize_dictionary()
-list.getLength() for chars and lists
-subStrings()
-once everything has been tested, remove commented-out test code


Standard Library (.olh)
-Write standard library functions
-Hook them into code we write via the compiler (how?)

Compiler (codegen.ml)
-Attempting to access a key not in the map will result in an index-out-of-bounds error.
-add builtin constants (dictionary)
-add structs and other builtin types
-printing maps
-global variables
-variable scope
-garbage collection for string return values
-SVmember (members of objects)
-SLiteralm (literal maps)
-SAssignm (member assigning)
-SAssign (variable assigning)
-SBinop for booleans (if needed?)
-SNewobj/SNewtobj (allocating space for new objects)
-SCallm (calling a function on an object)
-SFor
-SReturn
-SIf
-SForeach
-SBind (variable creation)
-build_ret for all return types



.
