@TODO
Once item is done/tested, remove it from the list

ALL FILES
-comment code, explain anything that's ambiguous or confusing to you (or that you think
  might need explaining to tfs/townsend)


Semantic Checker
-add any builtins that are allowed to be called by the user
-add back in the dictionary stuff
-go over and make sure it complies with the specs
-refactor if there's time


Legitimate Test Suite
-see test-suite


LRM
-curly quotes to straight; code to courier
-standardize format (line spacing, font size, all Null, etc)
-any updates made in syntax (check against parser/semant at very end)
-variable scope (clarify): one per function (even in cond/loop should be); what is default value (if any)
-check semantics of fresh for diff types

-readdict as a void function
-limits on string literals (they can have newlines literals!),
 escaped quote char is poss?, what about "\n?" TEST THIS
-getsetters (explain the semantics in builtin function section)
-modifying maps while foreaching them (once that section's written)


BUILTINS (ostdlib.c)
-anagram() (takes dictionary as param, if we need it)
-subStrings() if we need it


Standard Library (.olh)
-Write standard library functions (list here)
-Hook them into code we write via the compiler (how?) https://piazza.com/class/jaiu2g6r8py36c?cid=321


Compiler (codegen.ml)
-add new builtins
-readdict as a "void" function
-add builtin constants (dictionary, letterScores) when appropriate
-SVmember (members of objects: change them from calls to getsetters using build_call)
-SLiteralm (literal maps)
-player functionality
-SAssignm (member assigning: change to call setter)
-SNewobj/SNewtobj (allocating space for new objects)
-SNewlis of listlist (and SLiterall for lists of lists)
-add_terminal for all return types
-add builtins for strlen and others
-null comparisons/null pointer
-foreach and maps: use an iterator, NOT a counter



.
