@TODO
Once item is done/tested, remove it from the list

ALL FILES
-comment code, explain anything that's ambiguous or confusing to you (or that you think
  might need explaining to tfs/townsend)
-do we need everything in ostdlib? check carefully


Semantic Checker
-player: duplicate arguments
-add any more builtins that are allowed to be called by the user (check vs lrm)
-add back in the dictionary stuff
-go over and make sure it complies with the specs
-refactor if there's time


Legitimate Test Suite
-see test-suite
-also, edit testall.sh so all are comparing vs a diff file


LRM
-curly quotes to straight; code to courier
-standardize format (line spacing, font size, all Null, etc)
-any updates made in syntax (check against parser/semant at very end)
-variable scope (clarify): one per function (even in cond/loop should be)
-what is default value (default for globals is null, for others is whatever's allocated)
-lists are NOT immutable. talk about their mutability (implemented as C arrays, attempt to modify out of bounds for allocated GetElemSpace
 is impossible, though other mod methods such as setting elem at index to something else, are totally ok (which may result in a changed dimension))
-check syntax/semantics of fresh for diff types
-listToString() and why that is allowed (we don't want users carelessly manipulating strings)

-ASCII max = 127, not 256
-readdict as a void function (sets dict to null on error)
-limits on string literals (they can have newlines literals!),
 escaped quote char is poss?, what about "\n?" TEST THIS
-getsetters (explain the semantics in builtin function section)
-modifying maps while foreaching them (once that section's written)
-remove no assignments rue
-functions can't start with capital
-{} being type inferred (empty maps are null or length 0; fresh map if you want to make one)
-how to set one char of a listlist
-no statements after return


Standard Library (.olh)
-Write standard library functions (list here)
 random
 reverse
 scramble
-Hook them into code we write via the compiler (how?) https://piazza.com/class/jaiu2g6r8py36c?cid=321


Compiler (codegen.ml)
-match call() with builtins (destroy, contains, readDict)

-player functionality
-force mapsetters to assign if the type is a variable or vmember
-SNewobj (allocating space for new objects:
 set players to malloc, how to set elems: build const ptr and copy it over

-foreach and maps/list: get next without c function?
-fill list without calling a C function




.
