#Makefile that compiles the !OLLEH compiler
#Contributors: Caroline Roig-Irwin clr2176
#               Amnah Ahmad aza2111
#               Mahika Bhalla mmb2276

OBJS = ast.cmx sast.cmx codegen.cmx parser.cmx scanner.cmx semant.cmx olleh.cmx

all : olleh ostdlib.o

olleh : $(OBJS)
	ocamlfind ocamlopt -linkpkg -package llvm -package llvm.analysis $(OBJS) -o olleh

scanner.ml : scanner.mll
	ocamllex scanner.mll

parser.ml parser.mli : parser.mly
	ocamlyacc parser.mly

%.cmo : %.ml
	ocamlc -c $<

%.cmi : %.mli
	ocamlc -c $<

%.cmx : %.ml
	ocamlfind ocamlopt -c -package llvm $<

# "make clean" removes all generated files

.PHONY : clean
clean :
	rm -f olleh parser.ml parser.mli scanner.ml *.cmo *.cmi *.cmx *.out *.o

# Generated by "ocamldep *.ml *.mli" after building scanner.ml
# and parser.ml

ast.cmo :
ast.cmx :
codegen.cmo: ast.cmo
codegen.cmx: ast.cmx
olleh.cmo : semant.cmo scanner.cmo parser.cmi codegen.cmo ast.cmo
olleh.cmx : semant.cmx scanner.cmx parser.cmx codegen.cmx ast.cmx
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
scanner.cmo : parser.cmi
scanner.cmx : parser.cmx
semant.cmo : ast.cmo
semant.cmx : ast.cmx
parser.cmi : ast.cmo

# Building the tarball

TESTS = add assign builtin compare concat emptybody exit for foreach func if\
	int list loop map null player print printbasic stdlib str while

TESTFILES = $(TESTS:%=test-%-pos.olh) $(TESTS:%=test-%-pos.out)

FAILS = add1 add3 ambigmap and chars cmp comment condscope div doublequote efor\
	eif eq folo foreach fpla freshlis1 freshlis2 freshlis3 freshpla1\
	freshpla2 funcfunc glist glofo glolo gmap intlist intlist2 list\
	listlistlist listype mapkey maptype mapval mixcmp mixmap mod mult nega\
	noparens not not2 null or paramnum paramtype prefix print printplayer\
	prior quote ret scope semi slist smap subtract undef unop var1 var2\
	var3 var4 var5 vartype voidas voidvar

FAILFILES = $(FAILS:%=fail-%-neg.olh) $(FAILS:%=fail-%-neg.err)

TARFILES = README.md \
    ast.ml sast.ml codegen.ml olleh.ml Makefile parser.mly \
     scanner.mll semant.ml testall.sh example.txt standard-lib.olh ostdlib.c \
    $(TESTFILES:%=tests/%) $(FAILFILES:%=tests/%)

tar : olleh.tar.gz

olleh.tar.gz : $(TARFILES)
	cd .. && tar czf olleh/olleh.tar.gz \
		$(TARFILES:%=olleh/%)
